const BOARD=document.getElementsByTagName("board-container")[0],GRIDS=document.getElementsByTagName("grid"),ALPHA=["A","B","C","D","E","F","G","H"],NUMBR=["1","2","3","4","5","6","7","8"];let PCIDS=[],PCELM,CTURN="black";function initBoard(){for(i=0;i<=64;i++)0<i&&i<=8?BOARD.innerHTML+='<grid data-row="'+ALPHA[7]+'" data-col="'+NUMBR[i-1]+'"></grid>':8<i&&i<=16?BOARD.innerHTML+='<grid data-row="'+ALPHA[6]+'" data-col="'+NUMBR[i-9]+'"></grid>':16<i&&i<=24?BOARD.innerHTML+='<grid data-row="'+ALPHA[5]+'" data-col="'+NUMBR[i-17]+'"></grid>':24<i&&i<=32?BOARD.innerHTML+='<grid data-row="'+ALPHA[4]+'" data-col="'+NUMBR[i-25]+'"></grid>':32<i&&i<=40?BOARD.innerHTML+='<grid data-row="'+ALPHA[3]+'" data-col="'+NUMBR[i-33]+'"></grid>':40<i&&i<=48?BOARD.innerHTML+='<grid data-row="'+ALPHA[2]+'" data-col="'+NUMBR[i-41]+'"></grid>':48<i&&i<=56?BOARD.innerHTML+='<grid data-row="'+ALPHA[1]+'" data-col="'+NUMBR[i-49]+'"></grid>':56<i&&i<=64&&(BOARD.innerHTML+='<grid data-row="'+ALPHA[0]+'" data-col="'+NUMBR[i-57]+'"></grid>');return console.info("Board layout initialized"),!0}function initPieces(){for(i=0;i<=GRIDS.length-1;i++){var t=GRIDS[i].attributes[0].nodeValue,e=parseInt(GRIDS[i].attributes[1].nodeValue);"H"==t&&e%2==0||"G"==t&&e%2!=0||"F"==t&&e%2==0?(GRIDS[i].innerHTML+='<piece data-ptyp="white" data-pcid="'+i+'" data-isking="false">',PCIDS.push(i),GRIDS[i].classList.add("active")):("A"==t&&e%2!=0||"B"==t&&e%2==0||"C"==t&&e%2!=0)&&(GRIDS[i].innerHTML+='<piece data-ptyp="black" data-pcid="'+i+'" data-isking="false">',PCIDS.push(i),GRIDS[i].classList.add("active"))}for(PCELM=document.getElementsByTagName("piece"),i=0;i<PCELM.length;i++)PCELM[i].setAttribute("onclick","selectPiece(this,this.attributes[1].nodeValue)"),PCELM[i].setAttribute("oncontextmenu","kingPiece(this,this.attributes[1].nodeValue)");return console.info("Placed all pieces successfully"),!0}function selectPiece(t,e){if(t.getAttribute("data-ptyp")!==CTURN)return console.warn("Cannot select an opponent's piece!"),!1;for(i=0;i<PCELM.length;i++)PCELM[i].classList.contains("selected")&&PCELM[i].getAttribute("data-pcid")!==e.toString()?PCELM[i].classList.remove("selected"):PCELM[i].getAttribute("data-pcid")!=e.toString()||t.classList.contains("selected")?PCELM[i].getAttribute("data-pcid")==e.toString()&&t.classList.contains("selected")&&(t.classList.remove("selected"),console.info(CTURN.toUpperCase()+" de-selected "+t.getAttribute("data-ptyp")+" piece at grid "+t.parentNode.getAttribute("data-row")+t.parentNode.getAttribute("data-col"))):(t.classList.add("selected"),console.info(CTURN.toUpperCase()+" selected "+t.getAttribute("data-ptyp")+" piece at grid "+t.parentNode.getAttribute("data-row")+t.parentNode.getAttribute("data-col")))}function kingPiece(t,e){return t.getAttribute("data-ptyp")!==CTURN?(console.warn("Cannot change status of pieces from opponent!"),!1):"black"==t.getAttribute("data-ptyp")&&"H"!==t.parentNode.getAttribute("data-row")?(console.warn('Cannot king a black piece that is not on row "H"!'),!1):"white"==t.getAttribute("data-ptyp")&&"A"!==t.parentNode.getAttribute("data-row")?(console.warn('Cannot king a white piece that is not on row "A"!'),!1):void(t.getAttribute("data-pcid")==e&&"false"==t.getAttribute("data-isking")?(t.setAttribute("data-isking","true"),console.info(CTURN.toUpperCase()+" kinged "+t.getAttribute("data-ptyp")+" piece at grid "+t.parentNode.getAttribute("data-row")+t.parentNode.getAttribute("data-col"))):t.getAttribute("data-pcid")==e&&"true"==t.getAttribute("data-isking")&&(t.setAttribute("data-isking","false"),console.info(CTURN.toUpperCase()+" un-kinged "+t.getAttribute("data-ptyp")+" piece at grid "+t.parentNode.getAttribute("data-row")+t.parentNode.getAttribute("data-col"))))}function init(){1==initBoard()&&initPieces()}window.addEventListener("DOMContentLoaded",init);